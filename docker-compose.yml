services:
  api:
    container_name: VetManagerAPI
    build: ./
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - vet_manager_backend_network
      - vet_manager_frontend_network

  db:
    container_name: VetManagerDB
    image: ${DB_IMAGE}
    volumes:
      - ${DB_VOLUME_PATH}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - vet_manager_backend_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5

  angular:
    container_name: VetManagerClientDev
    build:
      context: ../VetManagerClient/
      dockerfile: Dockerfile
    volumes:
      - ../VetManagerClient/:/app
      - /app/node_modules
    ports:
      - "4200:4200"
    working_dir: /app
    networks:
      - vet_manager_frontend_network

volumes:
  postgres_data:

networks:
  vet_manager_backend_network:
  vet_manager_frontend_network:





